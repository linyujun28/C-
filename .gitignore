#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <time.h>
struct Student
{
	char name[20];
	int count;
	int win;
}student;
void save_data(struct Student *p)
{
	FILE *fp;
	struct Student data=*p;
	if((fp=fopen("a.dat","ab+"))==NULL)
	{
		printf("打开失败\n");
		exit(0);
	}
	fwrite(&data,sizeof(struct Student),1,fp);
	if(fclose(fp))
	{
		printf("关闭失败\n");
		exit(0);
	}
}
/*说明如何输入*/
void shouming()
{
	int i;
for(i=0;i<50;i++)
		putchar('*');
	printf("\n1-代表剪刀，2-代表石头，3-代表布,0-退出比赛\n");
	for(i=0;i<50;i++)
		putchar('*');
	printf("\n");
}
	/*接收用户输入*/
int scan_data()
{
	int get;
	printf("\n请输入剪刀石头布：");		
	while(1)
	{
		scanf("%d",&get);
			if(get>=0&&get<=3 )
				break;
			printf("输入错误，请重新输入。\n");
	}
	return get;
}
	/*电脑输出*/
int computer()
{
	int i;
	switch(i=rand() % 3)
	{
	case 1:
		printf("电脑出的是剪刀。");	
		break;
	case 2:
		printf("电脑出的是石头。");
		break;
	case 3:
		printf("电脑出的是布。");
		break;
	}
	return i;
}
void win_or_lose(int get,int i,int *win,int *lose,int *count){
	/*判断胜负*/
	switch(get-i)
	{
	case 0:
		printf("平局.\n");
		++*count;
		break;
	case 1:
	case -2:
		printf("you win.\n");
		++*win;
		++*count;
		break;
	case -1:
	case 2:
		printf("you lose.\n");
		++*lose;
		++*count;
		break;
	}
}
void jingsai()
{
	int get,i,count=0,win=0,lose=0;
	srand(time(0));
	shouming();
	while((win!=2)&&(lose!=2)){
	get=scan_data();
	i=computer();
	win_or_lose(get,i,&win,&lose,&count);
	}
	printf("胜利：%d盘\t失败：%d盘\t总盘数：%d盘\n",win,lose,count);
	if(win==2) {printf("You win! \n");}
	else {printf("Sorry,you lose!!!\n");}
	printf("是在下输了，高手，请留名:");
	getchar();
	gets(student.name);
	student.win=win;
	student.count=count;
	save_data(&student);
}
void practice()
{	
	int get,i,count=0,win=0,lose=0;
	srand(time(0));
	shouming();
	while(1){
	get=scan_data();
	if(get==0)
		break;
	i=computer();
	win_or_lose(get,i,&win,&lose,&count);
	}
	printf("胜利：%d盘\t失败：%d盘\t总盘数：%d盘\n",win,lose,count);
}


void star()
{
	int i;
	for(i=0;i<50;i++)
		putchar('*');
	printf("\n1-竞赛模式\t2-练习模式\n");
	for(i=0;i<50;i++)
		putchar('*');
	printf("\n");
	scanf("%d",&i);
	switch(i)
	{
	case 1:
		jingsai();
		break;
	case 2:
		practice();break;
	default:
		printf("输入错误，请重新输入\n");
		break;
	}	
}
	
int menu()
{
	int i;
for(i=0;i<50;i++)
		putchar('*');
	printf("\n1-开始游戏\t2-排名显示\t0-退出游戏\n");
	for(i=0;i<50;i++)
		putchar('*');
	printf("\n");
	scanf("%d",&i);
	return i;
}
void show()
{
	FILE *fp;
	struct Student data;
	if((fp=fopen("a.dat","ab+"))==NULL)
	{
		printf("打开失败\n");
		exit(0);
	}
	fread(&data,sizeof(struct Student),1,fp);
	while(!feof(fp))
	{
		printf("姓名\t胜局\t总盘数\n");
		printf("%-8s%-8d%-8d\n",data.name,data.win,data.count);//输出当前这条记录
		fread(&data,sizeof(struct Student),1,fp);
	}
	if(fclose(fp))
	{
		printf("关闭失败\n");
		exit(0);
	}
}
void main()
{
	int js;
	FILE *fp=NULL;
	while((js=menu())!=0)
	{
		switch(js)
		{
		case 1:
			star();break;
		case 2:
			show();
			break;
		default:
			printf("输入错误，请重新输入\n");
			break;
		}
	}
}
